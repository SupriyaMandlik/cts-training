package com.cts.training.date;

import java.time.LocalDate;
import java.time.LocalTime;
import java.time.MonthDay;
import java.time.temporal.ChronoUnit;
import java.util.Date;

public class DateAndTime {
	public static void main(String[] args) {
		//1. How to get today's date in Java 8
		
		Date date=new Date();   //base time
		System.out.println(date);
		int day=date.getDay();
		switch(day) 
		{
		case 0: System.out.println("Sunday");
		break;
		case 1: System.out.println("Monday");
		break;
		case 2: System.out.println("tuesday");
		break;
		case 3: System.out.println("Wednesday");
		break;
		case 4: System.out.println("Thursday");
		break;
		case 5: System.out.println("Friday");
		break;
		case 6: System.out.println("Saturday");
		break;
		default:
			 System.out.println("Wrong choice");	
		}
	
		//2.How to get current day, month and year in Java 8
		
	LocalDate date1=LocalDate.now();
	int day1=date1.getDayOfMonth();
	int month=date1.getMonthValue();
	int year=date1.getYear();
	System.out.println("current day, month and year"); 
	System.out.println(date1);
	
	//3.How to get a particular date in Java 8
	
	LocalDate birthday=LocalDate.of(1998, 01, 19);
	
	System.out.println("Your birthday is :"+birthday);

	 //4.How to check if two dates are equal in Java 8
	
	LocalDate today=LocalDate.now();
	LocalDate birthday1=LocalDate.of(1998, 01, 19);
	
	if(birthday1.equals(today))
	{
		System.out.printf("Today %s and birthday %s are same dates %n",today,birthday);
	}
	else
	{
		System.out.println("Dates are not Equal");
	}

	
	//5. How to check for recurring events e.g. birthday in Java 8
	
	LocalDate today1=LocalDate.now();
	LocalDate birthday2=LocalDate.of(1985, 8, 18);
	MonthDay birth=MonthDay.of(birthday2.getMonthValue(), birthday2.getDayOfMonth());
	MonthDay current=MonthDay.from(today1);
	if(birth.equals(current))
	{
		System.out.printf("Today %s and birthday %s are same dates %n",today1,birthday2);
	}
	else
	{
		System.out.println("Dates are not Equal");
	}

   //6. How to get current Time in Java 8
	

	LocalTime current1=LocalTime.now();
	System.out.println("Current time is :"+current1);
	
	
	//7.How to add hours in time
	
	LocalTime current2=LocalTime.now();
	LocalTime newTime=current2.plusHours(8);
	System.out.println("New  time is :"+newTime);
	 
	//8.  How to find Date after 1 week
	
	LocalDate today2=LocalDate.now();
	
	LocalDate next=today2.plus(1, ChronoUnit.WEEKS);
	System.out.println("Today's date is :"+today2);
	System.out.println("1 week Later date is :"+next);
	
	//9. Date before and after 1 year
	
	
	LocalDate previous=today3.minus(1, ChronoUnit.YEARS);
	LocalDate next1=today3.plus(1, ChronoUnit.YEARS);
	System.out.println("previous Years' date is :"+previous);

	System.out.println("1 Year Later date is :"+next1);
	
	}}

